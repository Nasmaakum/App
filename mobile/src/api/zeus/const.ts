/* eslint-disable */

export const AllTypesProps: Record<string,any> = {
	AboutWhereUniqueInput:{

	},
	AboutWhereInput:{
		AND:"AboutWhereInput",
		OR:"AboutWhereInput",
		NOT:"AboutWhereInput",
		id:"IDFilter"
	},
	AboutCreateInput:{

	},
	AboutUpdateInput:{

	},
	AboutOrderByInput:{
		id:"OrderDirection",
		createdAt:"OrderDirection"
	},
	AdvertisementWhereUniqueInput:{

	},
	AdvertisementWhereInput:{
		AND:"AdvertisementWhereInput",
		OR:"AdvertisementWhereInput",
		NOT:"AdvertisementWhereInput",
		id:"IDFilter"
	},
	AdvertisementCreateInput:{
		image:"Upload"
	},
	AdvertisementUpdateInput:{
		image:"Upload"
	},
	AdvertisementOrderByInput:{
		id:"OrderDirection",
		views:"OrderDirection",
		active:"OrderDirection",
		duration:"OrderDirection",
		createdAt:"OrderDirection"
	},
	LoginInput:{
		email:"EmailAddress"
	},
	CheckEmailInput:{
		email:"EmailAddress"
	},
	RegistrationInterpreterInput:{

	},
	VerifyRegistrationInput:{
		email:"EmailAddress",
		code:"OTP"
	},
	RegistrationInput:{
		email:"EmailAddress",
		dateOfBirth:"Date",
		mobile:"PhoneNumber",
		gender:"Gender",
		password:"Password",
		interpreter:"RegistrationInterpreterInput"
	},
	RequestPasswordResetInput:{
		email:"EmailAddress"
	},
	VerifyPasswordResetInput:{
		email:"EmailAddress",
		code:"OTP"
	},
	ResetPasswordInput:{
		code:"OTP",
		email:"EmailAddress",
		password:"Password"
	},
	ChangePasswordInput:{
		newPassword:"Password"
	},
	CallStatus: "enum" as const,
	CallWhereUniqueInput:{

	},
	CallWhereInput:{
		AND:"CallWhereInput",
		OR:"CallWhereInput",
		NOT:"CallWhereInput",
		id:"IDFilter"
	},
	StartCallWhereInput:{

	},
	KeepCallAliveWhereInput:{

	},
	KeepCallAliveData:{

	},
	EndCallInput:{

	},
	CallOrderByInput:{
		id:"OrderDirection",
		createdAt:"OrderDirection"
	},
	ConnectServiceInput:{

	},
	Query:{
		about:{
			where:"AboutWhereUniqueInput"
		},
		abouts:{
			where:"AboutWhereInput",
			orderBy:"AboutOrderByInput"
		},
		aboutsCount:{
			where:"AboutWhereInput"
		},
		advertisement:{
			where:"AdvertisementWhereUniqueInput"
		},
		advertisements:{
			where:"AdvertisementWhereInput",
			orderBy:"AdvertisementOrderByInput"
		},
		advertisementsCount:{
			where:"AdvertisementWhereInput"
		},
		login:{
			data:"LoginInput"
		},
		call:{
			where:"CallWhereUniqueInput"
		},
		calls:{
			where:"CallWhereInput",
			orderBy:"CallOrderByInput"
		},
		callsCount:{
			where:"CallWhereInput"
		},
		frequentlyAskedQuestion:{
			where:"FrequentlyAskedQuestionWhereUniqueInput"
		},
		frequentlyAskedQuestions:{
			where:"FrequentlyAskedQuestionWhereInput",
			orderBy:"FrequentlyAskedQuestionOrderByInput"
		},
		frequentlyAskedQuestionsCount:{
			where:"FrequentlyAskedQuestionWhereInput"
		},
		interpreterRatingOption:{
			where:"InterpreterRatingOptionWhereUniqueInput"
		},
		interpreterRatingOptions:{
			where:"InterpreterRatingOptionWhereInput",
			orderBy:"InterpreterRatingOptionOrderByInput"
		},
		interpreterRatingOptionsCount:{
			where:"InterpreterRatingOptionWhereInput"
		},
		interpreterRating:{
			where:"InterpreterRatingWhereUniqueInput"
		},
		interpreterRatings:{
			where:"InterpreterRatingWhereInput",
			orderBy:"InterpreterRatingOrderByInput"
		},
		interpreterRatingsCount:{
			where:"InterpreterRatingWhereInput"
		},
		interpreter:{
			where:"InterpreterWhereUniqueInput"
		},
		interpreters:{
			where:"InterpreterWhereInput",
			orderBy:"InterpreterOrderByInput"
		},
		interpretersCount:{
			where:"InterpreterWhereInput"
		},
		compareVersions:{
			data:"CompareVersionsInput"
		},
		notification:{
			where:"NotificationWhereUniqueInput"
		},
		notifications:{
			where:"NotificationWhereInput",
			orderBy:"NotificationOrderByInput"
		},
		myNotifications:{
			where:"NotificationWhereInput",
			orderBy:"NotificationOrderByInput"
		},
		notificationsCount:{
			where:"NotificationWhereInput"
		},
		myNotificationsCount:{
			where:"NotificationWhereInput"
		},
		privacyPolicy:{
			where:"PrivacyPolicyWhereUniqueInput"
		},
		privacyPolicies:{
			where:"PrivacyPolicyWhereInput",
			orderBy:"PrivacyPolicyOrderByInput"
		},
		privacyPoliciesCount:{
			where:"PrivacyPolicyWhereInput"
		},
		serviceCategory:{
			where:"ServiceCategoryWhereUniqueInput"
		},
		serviceCategories:{
			where:"ServiceCategoryWhereInput",
			orderBy:"ServiceCategoryOrderByInput"
		},
		serviceCategoriesCount:{
			where:"ServiceCategoryWhereInput"
		},
		service:{
			where:"ServiceWhereUniqueInput"
		},
		services:{
			where:"ServiceWhereInput",
			orderBy:"ServiceOrderByInput"
		},
		servicesCount:{
			where:"ServiceWhereInput"
		},
		termsOfUse:{
			where:"TermsOfUseWhereUniqueInput"
		},
		termsOfUses:{
			where:"TermsOfUseWhereInput",
			orderBy:"TermsOfUseOrderByInput"
		},
		termsOfUsesCount:{
			where:"TermsOfUseWhereInput"
		},
		user:{
			where:"UserWhereUniqueInput"
		},
		users:{
			where:"UserWhereInput",
			orderBy:"UserOrderByInput"
		},
		usersCount:{
			where:"UserWhereInput"
		}
	},
	Mutation:{
		createAbout:{
			data:"AboutCreateInput"
		},
		updateAbout:{
			where:"AboutWhereUniqueInput",
			data:"AboutUpdateInput"
		},
		deleteAbout:{
			where:"AboutWhereUniqueInput"
		},
		createAdvertisement:{
			data:"AdvertisementCreateInput"
		},
		updateAdvertisement:{
			where:"AdvertisementWhereUniqueInput",
			data:"AdvertisementUpdateInput"
		},
		deleteAdvertisement:{
			where:"AdvertisementWhereUniqueInput"
		},
		activateAdvertisement:{
			where:"AdvertisementWhereUniqueInput"
		},
		register:{
			data:"RegistrationInput"
		},
		verifyRegistration:{
			data:"VerifyRegistrationInput"
		},
		requestPasswordReset:{
			data:"RequestPasswordResetInput"
		},
		verifyPasswordReset:{
			data:"VerifyPasswordResetInput"
		},
		resetPassword:{
			data:"ResetPasswordInput"
		},
		changePassword:{
			data:"ChangePasswordInput"
		},
		startCall:{
			where:"StartCallWhereInput"
		},
		keepCallAlive:{
			where:"KeepCallAliveWhereInput",
			data:"KeepCallAliveData"
		},
		connectService:{
			data:"ConnectServiceInput"
		},
		createFrequentlyAskedQuestion:{
			data:"FrequentlyAskedQuestionCreateInput"
		},
		updateFrequentlyAskedQuestion:{
			where:"FrequentlyAskedQuestionWhereUniqueInput",
			data:"FrequentlyAskedQuestionUpdateInput"
		},
		deleteFrequentlyAskedQuestion:{
			where:"FrequentlyAskedQuestionWhereUniqueInput"
		},
		createInterpreterRatingOption:{
			data:"InterpreterRatingOptionCreateInput"
		},
		updateInterpreterRatingOption:{
			where:"InterpreterRatingOptionWhereUniqueInput",
			data:"InterpreterRatingOptionUpdateInput"
		},
		deleteInterpreterRatingOption:{
			where:"InterpreterRatingOptionWhereUniqueInput"
		},
		createInterpreterRating:{
			data:"InterpreterRatingCreateInput"
		},
		updateInterpreterRating:{
			where:"InterpreterRatingWhereUniqueInput",
			data:"InterpreterRatingUpdateInput"
		},
		deleteInterpreterRating:{
			where:"InterpreterRatingWhereUniqueInput"
		},
		approveInterpreter:{
			where:"InterpreterWhereUniqueInput"
		},
		rejectInterpreter:{
			where:"InterpreterWhereUniqueInput"
		},
		updateInterpreter:{
			where:"InterpreterWhereUniqueInput",
			data:"InterpreterUpdateInput"
		},
		updateMyInterpreter:{
			data:"MyInterpreterUpdateInput"
		},
		toggleFavoriteInterpreter:{
			where:"InterpreterWhereUniqueInput"
		},
		submitExpoToken:{
			data:"SubmitExpoTokenInput"
		},
		sendNotification:{
			data:"SendNotificationInput"
		},
		createNotification:{
			data:"NotificationCreateInput"
		},
		updateNotification:{
			where:"NotificationWhereUniqueInput",
			data:"NotificationUpdateInput"
		},
		deleteNotification:{
			where:"NotificationWhereUniqueInput"
		},
		createPrivacyPolicy:{
			data:"PrivacyPolicyCreateInput"
		},
		updatePrivacyPolicy:{
			where:"PrivacyPolicyWhereUniqueInput",
			data:"PrivacyPolicyUpdateInput"
		},
		deletePrivacyPolicy:{
			where:"PrivacyPolicyWhereUniqueInput"
		},
		acceptPrivacyPolicy:{
			where:"PrivacyPolicyWhereUniqueInput"
		},
		createServiceCategory:{
			data:"ServiceCategoryCreateInput"
		},
		updateServiceCategory:{
			where:"ServiceCategoryWhereUniqueInput",
			data:"ServiceCategoryUpdateInput"
		},
		deleteServiceCategory:{
			where:"ServiceCategoryWhereUniqueInput"
		},
		createService:{
			data:"ServiceCreateInput"
		},
		updateService:{
			where:"ServiceWhereUniqueInput",
			data:"ServiceUpdateInput"
		},
		deleteService:{
			where:"ServiceWhereUniqueInput"
		},
		createTermsOfUse:{
			data:"TermsOfUseCreateInput"
		},
		updateTermsOfUse:{
			where:"TermsOfUseWhereUniqueInput",
			data:"TermsOfUseUpdateInput"
		},
		deleteTermsOfUse:{
			where:"TermsOfUseWhereUniqueInput"
		},
		acceptTermsOfUse:{
			where:"TermsOfUseWhereUniqueInput"
		},
		createUser:{
			data:"UserCreateInput"
		},
		updateMyUser:{
			data:"MyUserUpdateInput"
		},
		updateUser:{
			where:"UserWhereUniqueInput",
			data:"UserUpdateInput"
		},
		deleteMyUser:{
			data:"MyUserDeleteInput"
		},
		deleteUser:{
			where:"UserWhereUniqueInput"
		},
		updateMyPreferences:{
			data:"MyUserPreferencesUpdateInput"
		}
	},
	IDFilter:{
		not:"IDFilter"
	},
	RelationshipNullableFilter:{
		is:"Null",
		isNot:"Null"
	},
	ArrayNullableFilter:{

	},
	StringNullableFilter:{
		mode:"QueryMode",
		not:"NestedStringNullableFilter"
	},
	NestedStringNullableFilter:{
		not:"NestedStringNullableFilter"
	},
	IntNullableFilter:{
		not:"NestedIntNullableFilter"
	},
	NestedIntNullableFilter:{
		not:"NestedIntNullableFilter"
	},
	FloatNullableFilter:{
		not:"NestedFloatNullableFilter"
	},
	NestedFloatNullableFilter:{
		not:"NestedFloatNullableFilter"
	},
	QueryMode: "enum" as const,
	OrderDirection: "enum" as const,
	Gender: "enum" as const,
	FrequentlyAskedQuestionWhereUniqueInput:{

	},
	FrequentlyAskedQuestionWhereInput:{
		AND:"FrequentlyAskedQuestionWhereInput",
		OR:"FrequentlyAskedQuestionWhereInput",
		NOT:"FrequentlyAskedQuestionWhereInput",
		id:"IDFilter"
	},
	FrequentlyAskedQuestionCreateInput:{

	},
	FrequentlyAskedQuestionUpdateInput:{

	},
	FrequentlyAskedQuestionOrderByInput:{
		id:"OrderDirection",
		createdAt:"OrderDirection"
	},
	InterpreterRatingOptionWhereUniqueInput:{

	},
	InterpreterRatingOptionWhereInput:{
		AND:"InterpreterRatingOptionWhereInput",
		OR:"InterpreterRatingOptionWhereInput",
		NOT:"InterpreterRatingOptionWhereInput",
		ratingVisibleFrom:"FloatNullableFilter",
		ratingVisibleTo:"FloatNullableFilter",
		id:"IDFilter"
	},
	InterpreterRatingOptionCreateInput:{

	},
	InterpreterRatingOptionUpdateInput:{

	},
	InterpreterRatingOptionOrderByInput:{
		id:"OrderDirection",
		createdAt:"OrderDirection"
	},
	InterpreterRatingWhereUniqueInput:{

	},
	InterpreterRatingWhereInput:{
		AND:"InterpreterRatingWhereInput",
		OR:"InterpreterRatingWhereInput",
		NOT:"InterpreterRatingWhereInput",
		id:"IDFilter"
	},
	InterpreterRatingCreateInput:{

	},
	InterpreterRatingUpdateInput:{

	},
	InterpreterRatingOrderByInput:{
		id:"OrderDirection",
		createdAt:"OrderDirection"
	},
	InterpreterStatus: "enum" as const,
	InterpreterWhereUniqueInput:{

	},
	InterpreterWhereInput:{
		AND:"InterpreterWhereInput",
		OR:"InterpreterWhereInput",
		NOT:"InterpreterWhereInput",
		id:"IDFilter"
	},
	InterpreterUpdateInput:{
		status:"InterpreterStatus"
	},
	MyInterpreterUpdateInput:{

	},
	InterpreterOrderByInput:{
		id:"OrderDirection",
		approved:"OrderDirection",
		online:"OrderDirection",
		createdAt:"OrderDirection"
	},
	SubmitExpoTokenInput:{

	},
	CompareVersionsInput:{

	},
	SendNotificationInput:{

	},
	NotificationWhereUniqueInput:{

	},
	NotificationWhereInput:{
		AND:"NotificationWhereInput",
		OR:"NotificationWhereInput",
		NOT:"NotificationWhereInput",
		id:"IDFilter"
	},
	NotificationCreateInput:{

	},
	NotificationUpdateInput:{

	},
	NotificationOrderByInput:{
		id:"OrderDirection",
		createdAt:"OrderDirection"
	},
	PrivacyPolicyWhereUniqueInput:{

	},
	PrivacyPolicyWhereInput:{
		AND:"PrivacyPolicyWhereInput",
		OR:"PrivacyPolicyWhereInput",
		NOT:"PrivacyPolicyWhereInput",
		id:"IDFilter"
	},
	PrivacyPolicyCreateInput:{

	},
	PrivacyPolicyUpdateInput:{

	},
	PrivacyPolicyOrderByInput:{
		id:"OrderDirection",
		createdAt:"OrderDirection"
	},
	Upload: `scalar.Upload` as const,
	Date: `scalar.Date` as const,
	Null: `scalar.Null` as const,
	NullableString: `scalar.NullableString` as const,
	NullableNumber: `scalar.NullableNumber` as const,
	NullableID: `scalar.NullableID` as const,
	UntrimmedString: `scalar.UntrimmedString` as const,
	LowercaseString: `scalar.LowercaseString` as const,
	UppercaseString: `scalar.UppercaseString` as const,
	EmailAddress: `scalar.EmailAddress` as const,
	Password: `scalar.Password` as const,
	OTP: `scalar.OTP` as const,
	PhoneNumber: `scalar.PhoneNumber` as const,
	ServiceCategoryWhereUniqueInput:{

	},
	ServiceCategoryWhereInput:{
		AND:"ServiceCategoryWhereInput",
		OR:"ServiceCategoryWhereInput",
		NOT:"ServiceCategoryWhereInput",
		id:"IDFilter"
	},
	ServiceCategoryCreateInput:{
		image:"Upload"
	},
	ServiceCategoryUpdateInput:{
		image:"Upload"
	},
	ServiceCategoryOrderByInput:{
		id:"OrderDirection",
		titleEn:"OrderDirection",
		createdAt:"OrderDirection"
	},
	ServiceWhereUniqueInput:{

	},
	ServiceWhereInput:{
		AND:"ServiceWhereInput",
		OR:"ServiceWhereInput",
		NOT:"ServiceWhereInput",
		id:"IDFilter"
	},
	ServiceCreateInput:{
		phone:"PhoneNumber",
		image:"Upload"
	},
	ServiceUpdateInput:{
		phone:"PhoneNumber",
		image:"Upload"
	},
	ServiceOrderByInput:{
		id:"OrderDirection",
		createdAt:"OrderDirection"
	},
	TermsOfUseWhereUniqueInput:{

	},
	TermsOfUseWhereInput:{
		AND:"TermsOfUseWhereInput",
		OR:"TermsOfUseWhereInput",
		NOT:"TermsOfUseWhereInput",
		id:"IDFilter"
	},
	TermsOfUseCreateInput:{

	},
	TermsOfUseUpdateInput:{

	},
	TermsOfUseOrderByInput:{
		id:"OrderDirection",
		createdAt:"OrderDirection"
	},
	UserRole: "enum" as const,
	UserWhereUniqueInput:{
		email:"EmailAddress"
	},
	UserRoleNullableFilter:{
		equals:"UserRole",
		in:"UserRole",
		notIn:"UserRole"
	},
	UserWhereInput:{
		AND:"UserWhereInput",
		OR:"UserWhereInput",
		NOT:"UserWhereInput",
		id:"IDFilter",
		firstName:"StringNullableFilter",
		lastName:"StringNullableFilter",
		email:"StringNullableFilter",
		role:"UserRoleNullableFilter"
	},
	UserCreateInput:{
		email:"EmailAddress",
		dateOfBirth:"Date",
		language:"UppercaseString",
		mobile:"PhoneNumber",
		gender:"Gender",
		password:"Password",
		role:"UserRole",
		image:"Upload"
	},
	UserUpdateInput:{
		email:"EmailAddress",
		dateOfBirth:"Date",
		language:"UppercaseString",
		mobile:"PhoneNumber",
		gender:"Gender",
		password:"Password",
		role:"UserRole",
		image:"Upload"
	},
	MyUserUpdateInput:{
		email:"EmailAddress",
		dateOfBirth:"Date",
		language:"UppercaseString",
		mobile:"PhoneNumber",
		gender:"Gender",
		image:"Upload"
	},
	MyUserPreferencesUpdateInput:{

	},
	MyUserDeleteInput:{

	},
	UserOrderByInput:{
		id:"OrderDirection",
		firstName:"OrderDirection",
		lastName:"OrderDirection",
		email:"OrderDirection",
		role:"OrderDirection",
		createdAt:"OrderDirection"
	},
	UserFilter:{
		email:"EmailAddress",
		role:"UserRole"
	}
}

export const ReturnTypes: Record<string,any> = {
	About:{
		id:"ID",
		content:"String",
		contentEn:"String",
		contentAr:"String",
		version:"Int",
		createdAt:"Date",
		updatedAt:"Date"
	},
	Advertisement:{
		id:"ID",
		title:"String",
		titleEn:"String",
		titleAr:"String",
		content:"String",
		contentEn:"String",
		contentAr:"String",
		image:"String",
		url:"String",
		duration:"Int",
		active:"Boolean",
		views:"Int",
		createdAt:"Date",
		updatedAt:"Date"
	},
	AuthenticationResponse:{
		authentication:"Authentication",
		message:"String"
	},
	Authentication:{
		user:"User",
		token:"String"
	},
	Call:{
		id:"ID",
		from:"User",
		to:"Interpreter",
		token:"String",
		status:"CallStatus",
		service:"Service",
		startedAt:"Date",
		endedAt:"Date",
		serviceCalledAt:"Date",
		serviceEndedAt:"Date",
		createdAt:"Date",
		updatedAt:"Date"
	},
	Query:{
		_empty:"String",
		latestAbout:"About",
		about:"About",
		abouts:"About",
		aboutsCount:"Int",
		advertisement:"Advertisement",
		advertisements:"Advertisement",
		advertisementsCount:"Int",
		activeAdvertisements:"Advertisement",
		login:"AuthenticationResponse",
		call:"Call",
		calls:"Call",
		callsCount:"Int",
		outboundNumber:"String",
		frequentlyAskedQuestion:"FrequentlyAskedQuestion",
		frequentlyAskedQuestions:"FrequentlyAskedQuestion",
		frequentlyAskedQuestionsCount:"Int",
		interpreterRatingOption:"InterpreterRatingOption",
		interpreterRatingOptions:"InterpreterRatingOption",
		interpreterRatingOptionsCount:"Int",
		interpreterRating:"InterpreterRating",
		interpreterRatings:"InterpreterRating",
		interpreterRatingsCount:"Int",
		interpreter:"Interpreter",
		interpreters:"Interpreter",
		interpretersCount:"Int",
		myAvailability:"Boolean",
		maintenanceMode:"MessageResponse",
		compareVersions:"MessageResponse",
		notification:"Notification",
		notifications:"Notification",
		myNotifications:"Notification",
		notificationsCount:"Int",
		myNotificationsCount:"Int",
		latestPrivacyPolicy:"PrivacyPolicy",
		privacyPolicy:"PrivacyPolicy",
		privacyPolicies:"PrivacyPolicy",
		privacyPoliciesCount:"Int",
		serviceCategory:"ServiceCategory",
		serviceCategories:"ServiceCategory",
		serviceCategoriesCount:"Int",
		service:"Service",
		services:"Service",
		servicesCount:"Int",
		latestTermsOfUse:"TermsOfUse",
		termsOfUse:"TermsOfUse",
		termsOfUses:"TermsOfUse",
		termsOfUsesCount:"Int",
		myUser:"User",
		user:"User",
		users:"User",
		usersCount:"Int",
		myPreferences:"UserPreferences"
	},
	Mutation:{
		_empty:"String",
		createAbout:"About",
		updateAbout:"About",
		deleteAbout:"About",
		createAdvertisement:"Advertisement",
		updateAdvertisement:"Advertisement",
		deleteAdvertisement:"Advertisement",
		activateAdvertisement:"Advertisement",
		register:"MessageResponse",
		verifyRegistration:"AuthenticationResponse",
		requestPasswordReset:"MessageResponse",
		verifyPasswordReset:"MessageResponse",
		resetPassword:"AuthenticationResponse",
		changePassword:"MessageResponse",
		activeCall:"Call",
		startCall:"Call",
		endCall:"Call",
		keepCallAlive:"Call",
		answerCall:"Call",
		rejectCall:"Call",
		connectService:"Call",
		disconnectService:"Call",
		createFrequentlyAskedQuestion:"FrequentlyAskedQuestion",
		updateFrequentlyAskedQuestion:"FrequentlyAskedQuestion",
		deleteFrequentlyAskedQuestion:"FrequentlyAskedQuestion",
		createInterpreterRatingOption:"InterpreterRatingOption",
		updateInterpreterRatingOption:"InterpreterRatingOption",
		deleteInterpreterRatingOption:"InterpreterRatingOption",
		createInterpreterRating:"InterpreterRating",
		updateInterpreterRating:"InterpreterRating",
		deleteInterpreterRating:"InterpreterRating",
		approveInterpreter:"Interpreter",
		rejectInterpreter:"Interpreter",
		updateInterpreter:"Interpreter",
		updateMyInterpreter:"Interpreter",
		toggleInterpreterAvailability:"Boolean",
		toggleFavoriteInterpreter:"Boolean",
		toggleMaintenanceMode:"MessageResponse",
		submitExpoToken:"MessageResponse",
		sendNotification:"MessageResponse",
		createNotification:"Notification",
		updateNotification:"Notification",
		deleteNotification:"Notification",
		createPrivacyPolicy:"PrivacyPolicy",
		updatePrivacyPolicy:"PrivacyPolicy",
		deletePrivacyPolicy:"PrivacyPolicy",
		acceptPrivacyPolicy:"PrivacyPolicyAcceptance",
		createServiceCategory:"ServiceCategory",
		updateServiceCategory:"ServiceCategory",
		deleteServiceCategory:"ServiceCategory",
		createService:"Service",
		updateService:"Service",
		deleteService:"Service",
		createTermsOfUse:"TermsOfUse",
		updateTermsOfUse:"TermsOfUse",
		deleteTermsOfUse:"TermsOfUse",
		acceptTermsOfUse:"TermsOfUseAcceptance",
		createUser:"User",
		updateMyUser:"User",
		updateUser:"User",
		deleteMyUser:"User",
		deleteUser:"User",
		updateMyPreferences:"UserPreferences"
	},
	BatchPayload:{
		count:"Int"
	},
	MessageResponse:{
		message:"String"
	},
	FrequentlyAskedQuestion:{
		id:"ID",
		question:"String",
		questionEn:"String",
		questionAr:"String",
		answer:"String",
		answerEn:"String",
		answerAr:"String",
		createdAt:"Date",
		updatedAt:"Date"
	},
	InterpreterRatingOption:{
		id:"ID",
		title:"String",
		titleEn:"String",
		titleAr:"String",
		ratingVisibleFrom:"Float",
		ratingVisibleTo:"Float",
		ratings:"InterpreterRating",
		createdAt:"Date",
		updatedAt:"Date"
	},
	InterpreterRating:{
		id:"ID",
		rating:"Int",
		options:"InterpreterRatingOption",
		tellUsMore:"String",
		ip:"String",
		interpreter:"Interpreter",
		user:"User",
		createdAt:"Date",
		updatedAt:"Date"
	},
	InterpreterUser:{
		id:"ID",
		firstName:"String",
		lastName:"String",
		fullName:"String",
		image:"String"
	},
	Interpreter:{
		id:"ID",
		languages:"String",
		ratings:"InterpreterRating",
		rating:"Float",
		user:"InterpreterUser",
		online:"Boolean",
		approved:"Boolean",
		status:"InterpreterStatus",
		isBusy:"Boolean",
		isFavorite:"Boolean",
		createdAt:"Date",
		updatedAt:"Date"
	},
	Notification:{
		id:"ID",
		title:"String",
		titleEn:"String",
		titleAr:"String",
		message:"String",
		messageEn:"String",
		messageAr:"String",
		createdAt:"Date",
		updatedAt:"Date"
	},
	PrivacyPolicyAcceptance:{
		id:"ID",
		privacyPolicy:"PrivacyPolicy",
		user:"User",
		createdAt:"Date",
		updatedAt:"Date"
	},
	PrivacyPolicy:{
		id:"ID",
		content:"String",
		contentEn:"String",
		contentAr:"String",
		version:"Int",
		createdAt:"Date",
		updatedAt:"Date"
	},
	Upload: `scalar.Upload` as const,
	Date: `scalar.Date` as const,
	Null: `scalar.Null` as const,
	NullableString: `scalar.NullableString` as const,
	NullableNumber: `scalar.NullableNumber` as const,
	NullableID: `scalar.NullableID` as const,
	UntrimmedString: `scalar.UntrimmedString` as const,
	LowercaseString: `scalar.LowercaseString` as const,
	UppercaseString: `scalar.UppercaseString` as const,
	EmailAddress: `scalar.EmailAddress` as const,
	Password: `scalar.Password` as const,
	OTP: `scalar.OTP` as const,
	PhoneNumber: `scalar.PhoneNumber` as const,
	ServiceCategory:{
		id:"ID",
		title:"String",
		titleEn:"String",
		titleAr:"String",
		image:"String",
		services:"Service",
		createdAt:"Date",
		updatedAt:"Date"
	},
	Service:{
		id:"ID",
		name:"String",
		nameEn:"String",
		nameAr:"String",
		description:"String",
		descriptionEn:"String",
		descriptionAr:"String",
		phone:"String",
		image:"String",
		category:"ServiceCategory",
		createdAt:"Date",
		updatedAt:"Date"
	},
	TermsOfUseAcceptance:{
		id:"ID",
		termsOfUse:"TermsOfUse",
		user:"User",
		createdAt:"Date",
		updatedAt:"Date"
	},
	TermsOfUse:{
		id:"ID",
		content:"String",
		contentEn:"String",
		contentAr:"String",
		version:"Int",
		createdAt:"Date",
		updatedAt:"Date"
	},
	UserPreferences:{
		id:"ID",
		emailNotifications:"Boolean",
		smsNotifications:"Boolean",
		pushNotifications:"Boolean"
	},
	User:{
		id:"ID",
		firstName:"String",
		lastName:"String",
		fullName:"String",
		cpr:"String",
		email:"String",
		dateOfBirth:"Date",
		language:"String",
		country:"String",
		city:"String",
		mobile:"String",
		gender:"Gender",
		role:"UserRole",
		image:"String",
		preferences:"UserPreferences",
		createdAt:"Date",
		updatedAt:"Date"
	}
}

export const Ops = {
query: "Query" as const,
	mutation: "Mutation" as const
}